name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
        env:
          # Use placeholder values for CI builds
          MONGODB_URI: ${{ secrets.CI_MONGODB_URI || 'mongodb://localhost:27017/hearing-hope-test' }}
          JWT_SECRET: ${{ secrets.CI_JWT_SECRET || 'test-jwt-secret' }}
          NEXTAUTH_SECRET: ${{ secrets.CI_NEXTAUTH_SECRET || 'test-nextauth-secret' }}
          NEXTAUTH_URL: ${{ secrets.CI_NEXTAUTH_URL || 'http://localhost:3000' }}

  # This job will only run on pushes to main (not on PRs)
  # and requires manual approval in GitHub Actions
  deploy-preview:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install Vercel CLI
        run: npm install -g vercel
      - name: Deploy to Vercel Preview
        run: vercel --token ${VERCEL_TOKEN} --confirm
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} 