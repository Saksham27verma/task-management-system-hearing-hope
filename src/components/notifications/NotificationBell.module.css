.notificationMessage {
  /* Limit notification message to 2 lines with ellipsis */
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-bottom: 4px;
  color: rgba(0, 0, 0, 0.6);
  line-height: 1.4;
}

.readStatus {
  display: flex;
  align-items: center;
  font-size: 0.75rem;
  color: rgba(0, 0, 0, 0.6);
  margin-left: 8px;
}

.unreadIndicator {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #1976d2;
  margin-right: 8px;
  display: inline-block;
}

/* Animation for the notification bell badge */
@keyframes pulse {
  0% { 
    transform: scale(0.95);
    box-shadow: 0 0 0 0 rgba(244, 67, 54, 0.7);
  }
  70% { 
    transform: scale(1);
    box-shadow: 0 0 0 6px rgba(244, 67, 54, 0);
  }
  100% { 
    transform: scale(0.95);
    box-shadow: 0 0 0 0 rgba(244, 67, 54, 0);
  }
}

/* Animation for new notification items */
@keyframes fadeIn {
  from { 
    opacity: 0;
    transform: translateY(-10px);
  }
  to { 
    opacity: 1;
    transform: translateY(0);
  }
}

/* Animation for the "NEW" badge */
@keyframes blink {
  0% { opacity: 1; }
  50% { opacity: 0.7; }
  100% { opacity: 1; }
}

.newBadge {
  animation: blink 2s infinite;
}

/* Animation for the swipe gesture hint on mobile */
@keyframes swipeHint {
  0% { transform: translateY(0); }
  25% { transform: translateY(-3px); }
  50% { transform: translateY(0); }
  75% { transform: translateY(3px); }
  100% { transform: translateY(0); }
}

.swipeHandle {
  animation: swipeHint 1.5s ease-in-out infinite;
}

/* Mobile styles */
@media (max-width: 600px) {
  .notificationMessage {
    -webkit-line-clamp: 3; /* Show more lines on mobile */
    margin-bottom: 8px;
  }
  
  /* Add some extra spacing for touch targets */
  .notificationItem {
    padding-top: 12px;
    padding-bottom: 12px;
  }
}

/* Dark mode adaptations */
@media (prefers-color-scheme: dark) {
  .notificationMessage {
    color: rgba(255, 255, 255, 0.7);
  }
}

/* Extra animation for the notification counter */
@keyframes countChange {
  0% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

.notificationCount {
  animation: countChange 0.3s ease-out;
}

/* Styling for notification list transitions */
.notificationList {
  transition: all 0.3s ease;
}

.notificationList > * {
  animation: fadeIn 0.3s ease forwards;
}

/* Improved touch feedback */
.touchFeedback {
  position: relative;
  overflow: hidden;
}

.touchFeedback::after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle, rgba(0, 0, 0, 0.1) 10%, transparent 10.01%);
  background-repeat: no-repeat;
  background-position: 50%;
  transform: scale(10, 10);
  opacity: 0;
  transition: transform 0.5s, opacity 0.5s;
}

.touchFeedback:active::after {
  transform: scale(0, 0);
  opacity: 0.3;
  transition: 0s;
} 